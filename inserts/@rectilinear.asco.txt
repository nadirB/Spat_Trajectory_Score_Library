@insert "inserts/@iniT.asco.txt"

@fun_def X($t, $a, $alpha){
	$a+($t*$alpha)
}

@fun_def Y($t, $b, $beta){
	$b+($t*$beta)
}

@proc_def ::rectilinear($src=1, $iniT=-1, $targeT=1, $a=0, $b=0, $alpha=1, $beta=0, $count=1, $speed=4)

{
	@local $body, $t ; to use for setvar outControl with a whenever{(setvar...==setvar...)}
	$body := 0.

	@local $cpt, $prefix
	$cpt := 0

	$prefix := "/source/" + $src + "/xy"
	oscsend spat5 "127.0.0.1" : 4072 $prefix

	loop lineLoop $speed{
		curve lineCurve @grain := 0.01s @Action := {
			spat5  @X($t, $a, $alpha) @Y($t, $b, $beta)
			;print_message $body $NOW $t
		}

		@abort :=
		{		kill lineLoop
			print_antescofo "lineCurve aborted at " $t
			Curve end
			@grain 0.1
			@action := {print_message "handler lineCurve: " $t
			spat5 @X($t, $a, $alpha) @Y($t, $b, $beta)
		}

		{

			$t {
				{ ($t)  } /*@type "exp"*/
				$speed { ($targeT) }
			}
		}
	}



	{
		$t
		{
			{ ($iniT)  } /*@type "exp"*/
			$speed { ($targeT) }


		}
	}
	;print_antescosf

	} during[$count#]

}
