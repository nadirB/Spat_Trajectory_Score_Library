@fun_def X($t, $a, $alpha) 

{ 
	$a+($t*$alpha)
} 

@fun_def Y($t, $b, $beta) 
{ 
	

	$b+($t*$beta)
}




@proc_def ::rectilinear($cmd, $iniT, $targeT, $a, $b, $alpha, $beta, $count, $SPEED)

{	
	@local $body, $t ; to use for setvar outControl with a whenever{(setvar...==setvar...)}
	$body := 0.
    
    loop lineLoop $SPEED ;@exclusive
	{
		

					curve lineCurve @grain := 0.01s 
						@Action := {

								
										@command($cmd)  @X($t, $a, $alpha) @Y($t, $b, $beta) 
										print_message $body $NOW $t 
									}

						@abort := 
							{		kill lineLoop
									print_antescofo "lineCurve aborted at " $t
									Curve end
										@grain 0.1
										@action := {print_message "handler lineCurve: " $t 
										;@command($cmd) xy @X($t, $r, $offsetX) @Y($t, $r, $offsetY)
										 }

									{

											$t { { ($t) } $SPEED { 0.0 } }

									}

							
							}

		
		
					{
						$t
							{
										{ ($iniT)  } /*@type "exp"*/
								 $SPEED { ($targeT) }
						
	
							}
					}
				 ;print_antescosf

				} during[$count#]

}


/////////////////////////////////////



@fun_def XW($t, $a, $alpha) 

{ 
	$a+(-$t*$alpha)
} 

@fun_def YW($t, $b, $beta) 
{ 
	

	$b+($t*$beta)
}




@proc_def ::line_west($cmd, $iniT, $targeT, $a, $b, $alpha,  $beta, $count, $SPEED)

{	
	@global $SPEED ; to use for setvar outControl with a whenever{(setvar...==setvar...)}
	
    
    loop line $SPEED
	{
		;abort lineCurve

		curve lineCurve @grain := 0.01s 
						@Action := {
								
								@command($cmd)  @XW($t, $a, $alpha) @YW($t, $b, $beta)  
							}

		

		
		
		{
			$t
					{
							   { ($iniT)  } /*@type "exp"*/
						$SPEED { ($targeT) }
						
	
					}
		}


	} during[$count#]

}




/////////////////////////////////////



@fun_def XS($t, $a, $alpha) 

{ 
	$a+($t*$alpha)
} 

@fun_def YS($t, $b, $beta) 
{ 
	

	$b+(-$t*$beta)
}




@proc_def ::line_south($cmd, $iniT, $targeT, $a, $b, $alpha, $beta, $count, $SPEED)

{	
	@global $SPEED ; to use for setvar outControl with a whenever{(setvar...==setvar...)}
	
    
    loop line $SPEED
	{
		;abort lineCurve

		curve lineCurve @grain := 0.01s 
						@Action := {
								
								@command($cmd)  @XS($t, $a, $alpha) @YS($t, $b, $beta)  
							}

		

		
		
		{
			$t
					{
							   { ($iniT)  } /*@type "exp"*/
						$SPEED { ($targeT) }
						
	
					}
		}


	} during[$count#]

}