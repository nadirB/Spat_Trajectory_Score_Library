
;La rosace d'équation polaire r(θ) = a cos(kθ + const.
; x=cos(kt)sin(t)
;y = cos(kt)cos(t) 

;k réel
; k rationnel courbe fermée et finie
;k irrationnel courbe non fermée et infinie

@fun_def X($t, $k) 

{ 
	@cos($k*$t)*@sin($t)
} 

@fun_def Y($t, $k)
 
{ 
	@cos(-$k*$t)*@cos($t)
}

@proc_def ::rosace_trajectory($cmd, $initT, $targeT, $k, $count, $speed) ;$count

{	@global $pi
	@local $speed

	$pi := 3.141592653589793
	
	

	loop pi $speed
	{
		abort picurve

		curve picurve @grain := 0.01s 
						@Action := {
								
								@command($cmd)  @X($t, $k) @Y($t, $k)
							}

		

		
		
		{
			$t
					{
							   { ($initT*$pi) } /*@type "exp"*/
						$speed { ($targeT*$pi) }
						
	
					}
		}


	} during[$count#]

}