;x(t) = asin(mt)
;y(t) = bcos(nt)

;toujours incluse dans le rectangle défini par :
; -a >= x <= a
; -b >= y <= b

; in our examples below (-1, 1)

; si m = n on obtient une ellipse
; et un cercle si, de plus, a = b

; l'allure d'un cycle change évidemment selon les valeurs des coefs m et n


; la courbe se ferme si m/n est rationnel :
;2pi/m et 2pi/n ont un multiple commun a x(t) et y(t)

@fun_def X($a, $m, $t){
	$a * @sin($m * $t)
}
@fun_def Y($b, $n, $t){
	$b * @cos($n * $t )
}

@proc_def ::lissajou($src, $initT, $endT, $a, $b, $m, $n, $count, $speed)

{
	@global $speed, $pi ; to use for setvar outControl with a whenever{(setvar...==setvar...)}

	$pi := 3.141592653589793

	@local $cpt
	$cpt := 0

	@history_clear

	$prefix := "/source/" + $src + "/xy"
	oscsend spat5 "127.0.0.1" : 4072 $prefix

	loop pi $speed
	{
		;abort lissajou_curve

		$cpt := $cpt + 1

		curve lissajou_curve @grain := 0.01s
		@Action := {

			spat5 @X($a, $m, $t) @Y($b, $n, $t)
		}

		{
			$t
			{
				{ ($initT*$pi)  } ;@type "sine_in"
				$speed { ($endT*$pi) }  ;@type "sine_out"


			}
			} print_antescofo $cpt


			} during[$count#]

		}
