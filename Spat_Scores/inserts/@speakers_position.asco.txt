@global $speakersmap, $speaker, $aed, $Speakers_Duo, $Speakers_Trio, $Speakers_Quad

$stereo := map { 
	( "speaker1", [-30., 0, 1.]), 	
	( "speaker2", [30., 0, 1.]) 
}


$stereo_surround := map { 
	( "speaker1", [-30., 0, 1.]), 	
	( "speaker2", [30., 0, 1.]),
	( "speaker3", [-180., 0, 1.])

}

$quad := map { 
	( "speaker1", [-45.000, 0, 2.]), 	
	( "speaker2", [45.000, 0, 2.]), 
	( "speaker3", [135.000, 0, 2. ]), 
	( "speaker4", [-135.000, 0, 2.])
}

$quad_surround := map { 
	( "speaker1", [-30., 0, 2.]), 	
	( "speaker2", [0., 0, 2.]), 
	( "speaker3", [30., 0, 2. ]), 
	( "speaker4", [-180.0, 0, 2.])
}


$five_one := map { 
	( "speaker1", [-30., 0, 2.]), 	
	( "speaker2", [0., 0, 2.]), 
	( "speaker3", [30., 0, 2. ]), 
	( "speaker4", [-110.0, 0, 2.]),
	( "speaker5", [110., 0, 2.])
}

$six := map { 
	( "speaker1", [-30., 0, 2.]), 	
	( "speaker2", [0., 0, 2.]), 
	( "speaker3", [30., 0, 2. ]), 
	( "speaker4", [-100.0, 0, 2.]),
	( "speaker5", [100., 0., 2.]),
	( "speaker6", [180., 0., 2.])
}

$seven_one := map { 
	( "speaker1", [-30., 0, 2.]), 	
	( "speaker2", [0., 0, 2.]), 
	( "speaker3", [30., 0, 2. ]), 
	( "speaker4", [-90.0, 0, 2.]),
	( "speaker5", [90., 0., 2.]),
	( "speaker6", [-150., 0., 2.]),
	( "speaker7", [150., 0., 2.])
}


$octo := map { 
	( "speaker1", [-45., 35, 2.]), 	
	( "speaker2", [45., 35, 2.]), 
	( "speaker3", [135., 35, 2. ]), 
	( "speaker4", [-135., 35, 2.]),
	( "speaker5", [-45, -35., 2.]),
	( "speaker6", [45., -35., 2.]),
	( "speaker7", [ 135., -35., 2.]),
	( "speaker8", [ -135., -35., 2.])
}

$nine_one := map { 
	( "speaker1", [-30., 0., 2.]), 	
	( "speaker2", [0., 0., 2.]), 
	( "speaker3", [30., 0., 2. ]), 
	( "speaker4", [-90., 0., 2.]),
	( "speaker5", [90., 0., 2. ]),
	( "speaker6", [-150., 0., 2.]),
	( "speaker7", [ 150., 0., 2.]),
	( "speaker8", [ -45., 45., 2.]),
	( "speaker9", [ 45., 45., 2.])
}



 $espro := map { 
	( "speaker1", [-35., 0., 2.]), 	
	( "speaker2", [0., 0., 2.]), 
	( "speaker3", [35., 0, 2.]), 
	( "speaker4", [90., 0., 2.]), 
	( "speaker5", [145., 0., 2.]), 
	( "speaker6", [180., 0., 2.]), 
	( "speaker7", [-145., 0., 2.]), 
	( "speaker8", [-90., 0., 2.]), 	
	( "speaker9", [-35., 25., 2.]), 
	( "speaker10", [35., 25., 2.]),
	( "speaker11", [145., 25, 2.]), 	
	( "speaker12", [-145., 25., 2.]), 
	( "speaker13", [1., 90., 1.])
}

$myConfig1 := map { 
	( "speaker1", [90.000, -5.003, 1.000]), 	
	( "speaker2", [50.000, -5.003, 1.000]), 
	( "speaker3", [10.000, -5.002, 1.000]), 
	( "speaker4", [-30.000, -5.003, 1.000]), 
	( "speaker5", [-70.000, -5.003, 1.000]), 
	( "speaker6", [-110.000, -5.003, 1.000]), 
	( "speaker7", [-150.000, -5.003, 1.000]), 
	( "speaker8", [170.000, -5.002, 1.000]), 	
	( "speaker9", [130.000, -5.003, 1.000]), 
	( "speaker10", [70.000, 26.001, 1.000]),
	( "speaker11", [30.000, 26.000, 1.000]), 	
	( "speaker12", [-10.002, 26.002, 1.000]), 
	( "speaker13", [-50.000, 26.002, 1.000]),
	( "speaker14", [-90.000, 26.001, 1.000]),
	( "speaker14", [-130.000, 26.002, 1.000]), 
	( "speaker15", [-169.998, 26.002, 1.000]), 
	( "speaker16", [150.000, 26.000, 1.000])
}




$myConfig2 := map { 
	( "speaker1", [-90.000, 0.000, 1.000]), 	
	( "speaker2", [-50.000, 0.000, 1.000]), 
	( "speaker3", [-10.000, 0.000, 1.000]), 
	( "speaker4", [-30.000, 0.000, 1.000]), 
	( "speaker5", [-70.000, 0.000, 1.000]), 
	( "speaker6", [-110.000, 0.000, 1.000]), 
	( "speaker7", [-150.000, 0.000, 1.000]), 
	( "speaker8", [170.000, 0.000, 1.000]), 	 
	( "speaker9", [-170.000, 0.000, 1.000]), 
	( "speaker10", [150.000, 0.000, 1.000]),
	( "speaker11", [110.000, 0.000, 1.000]), 
	( "speaker12", [70.000, 0.000, 1.000]),
	( "speaker13", [30.000, 0.000, 1.000]),
	( "speaker14", [10.000, 0.000, 1.000]),
	( "speaker15", [50.001, 0.000, 1.000]), 
	( "speaker16", [90.000, 0.000, 1.000]) 
}





$myConfig3 := map { 
	( "speaker1", [-45.000, 35.264, 1.732 ]), 	
	( "speaker2", [45.000, 35.264, 1.732 ]), 
	( "speaker3", [135.000, 35.264, 1.732]), 
	( "speaker4", [-135.000, 35.264, 1.732 ]), 
	( "speaker5", [-45.000, -35.264, 1.732 ]), 
	( "speaker6", [45.000, -35.264, 1.732]), 
	( "speaker7", [135.000, -35.264, 1.732]), 
	( "speaker8", [-135.000, -35.264, 1.732]), 	
	( "speaker9", [-45.000, 35.264, 1.732]), 
	( "speaker10", [45.000, 35.264, 1.732]),
	( "speaker11", [135.000, 35.264, 1.732 ]), 	
	( "speaker12", [-135.000, 35.264, 1.732]), 
	( "speaker13", [-45.000, -35.264, 1.732]),
	( "speaker14", [45.000, -35.264, 1.732]),
	( "speaker15", [135.000, -35.264, 1.732 ]), 
	( "speaker16", [-135.000, -35.264, 1.732]) 
	
}

$twentytwo := map { 
	( "speaker1", [ -53., 0., 1.]), 	
	( "speaker2", [ 53., 0., 1.]), 
	( "speaker3", [0., 0., 1.]), 
	( "speaker4", [-123., 0., 1.]), 
	( "speaker5", [ 123., 0., 1. ]), 
	( "speaker6", [-26., 0., 1.]), 
	( "speaker7", [ 26., 0., 1.]), 
	( "speaker8", [-180., 0., 1.]), 	
	( "speaker9", [ -90., 0., 1.]), 
	( "speaker10", [ 90., 0., 1.]),
	( "speaker11", [ -53., 37., 1. ]), 	
	( "speaker12", [53., 37., 1.]), 
	( "speaker13", [0., 37., 1.]),
	( "speaker14", [ 0., 90., 1.]),
	( "speaker15", [ -123., 37., 1. ]), 
	( "speaker16", [123., 37., 1.]),
	( "speaker17", [ -90., 37., 1. ]), 	
	( "speaker18", [ 90., 37., 1.]), 
	( "speaker19", [ -180., 37., 1.]),
	( "speaker20", [ 0., -20., 1. ]),
	( "speaker21", [ -53., -20., 1. ]), 
	( "speaker22", [ 53., -20., 1.]) 
	
}






@proc_def ::SpeakersConfig($speakersmap)
{
			forall $speaker, $aed in $speakersmap
			{
				@command($speaker) $aed
				print_speakers $speaker $aed
			}
			
}


////////////////////////////////////////////////////////////////////


;setAllSpeakerState_XY

$myConfig4 := map { 
	( "speaker1", [-2, 0,2]), 	
	( "speaker2", [-1, 0, 2]), 
	( "speaker3", [1, 0, 2]), 
	( "speaker4", [2, 2]),
	( "speaker5", [-1.5, 0, 1]), 
	( "speaker6", [-0.5, 0, 1]), 
	( "speaker7", [0.5, 0, 1]), 
	( "speaker8", [1.5, 1]), 
	( "speaker9", [-1.5, 0, -1]), 	
	( "speaker10", [-0.5, 0, -1]), 
	( "speaker11", [0.5, 0, -1]),
	( "speaker12", [1.5, 0, -1]), 	
	( "speaker13", [-2, 0, -2]), 
	( "speaker14", [-1, 0, -2]),
	( "speaker15", [1, 0, -2]),
	( "speaker16", [ 2, 0, -2])
	
}

@proc_def ::XY_SpeakersState($speakersmap)
{
	
			forall $speaker, $xy in $speakersmap
			{
				@command($speaker) $xy
				print_speakers $speaker $xy
			}
		
}



