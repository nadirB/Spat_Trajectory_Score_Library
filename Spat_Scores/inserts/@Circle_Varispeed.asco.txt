@global $pi
$pi := 3.141592653589793




@fun_def X($t, $r, $offsetX) 

{ 
	$r*@cos($t) + $offsetX
} 

@fun_def Y($t, $r, $offsetY) 
{ 
	

	$r*@sin($t) + $offsetY
}




@proc_def vari_circle($cmd, $iniT, $targeT, $r, $offsetX, $offsetY, $count, $speed)

{	

	loop Varispeed $speed + 0.02
	{
		
		curve  Varispeed @grain := 0.02s

		{ $temp
				{			   {$RT_TEMPO} ;$vari1
					  $speed/4 {($RT_TEMPO * 0.5)} ;$vari2
					  $speed/4 {($RT_TEMPO * 2)} ;$vari3
					   $speed/4 {($RT_TEMPO * 0.1)};$vari4   ; todo ! multiplication variables....
					  
					 
				}

		} 
			
			;print_interpolation $t
			
			
	}	during[$count#]





	@global $speed, $pi ; to use for setvar outControl with a whenever{(setvar...==setvar...)}
	$pi := 3.141592653589793

	
	group circle @tempo $temp
	{
		@local $cpt
		$cpt := 0


		loop circle_curve $speed
		{
				;abort circle_curve

			$cpt := $cpt+1

			curve cercleCurve @grain := 0.02s 
						@Action := {
								
								@command($cmd) xy @X($t, $r, $offsetX) @Y($t, $r, $offsetY)  
							}

			@abort := 
				{
					print_message "Curve C aborted at " $t
					Curve AH
						@grain 0.1
						@action := {print_message "handler curve: " $t }

						{

							$t { { $t } 1 { 0.0 } }

						}

			
				}

				
		
			{
				$t
						{
								{ ($iniT*$pi)  } /*@type "exp"*/
							$speed { ($targeT*$pi) }
						
	
						}
			}
				
			print_antescofo $cpt


		} during[$count#]
	
	}

    
    

}
