;x(t) = acost
;y(t) = bsint

;
;t = [0, 2pi]

; si a > b, on a une ellipse de grand axe 2a portÃ© par x'x
; si b > a, --> 2b --> y'y


; $init [0, 2]
; $end [0, 2]

@global $pi, $r
$pi := 3.141592653589793
$r := 1

@fun_def X($a, $alpha, $t, $offsetX){

	$a*@cos($t) - $alpha*@sin($t) + $offsetX

}

@fun_def Y($b, $beta, $t,  $offsetY){

	$b*@sin($t) - $beta*@cos($t) + $offsetY

}

@proc_def ::ellipse($src = 1, $iniT = 0, $targeT=2, $a=2, $b=1, $alpha=0, $beta=0, $offsetX=0, $offsetY=0, $count=1, $speed=4)


{
	@global $speed ; to use for setvar outControl with a whenever{(setvar...==setvar...)}
	@local $offset, $cpt1,  $prefix
	$offset := 0.
	$cpt1 := 0

	$prefix := "/source/" + $src + "/xy"
	oscsend spat5 "127.0.0.1" : 4072 $prefix



	loop pi $speed
	{
		;abort ellipseAB_curve

		$cpt1 := $cpt1+1

		curve ellipseAB_curve @grain := 0.02s
		@Action := {

			spat5 @X($a, $alpha, $t, $offsetX) @Y($b, $beta, $t, $offsetY)
		}

		{
			$t
			{
							 { ($iniT*$pi)  } /*@type "exp"*/
				$speed { ($targeT*$pi) }


			}
		}

		;print_antescofo $cpt1

		} during[$count#]

	}
